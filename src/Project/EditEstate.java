/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import com.mysql.cj.util.StringUtils;
import java.sql.*;

import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author ANSHIKA
 */
public class EditEstate extends javax.swing.JFrame {

    /**
     * Creates new form EditEstate
     */
    public EditEstate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newEstate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        updateEstaeId = new javax.swing.JTextField();
        proceedUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        deleteEstateID = new javax.swing.JTextField();
        proceedDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newEstate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        newEstate.setText("New +");
        newEstate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEstateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("<HTML><U>Add Estate</U><HTML>");

        jSeparator1.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("<HTML><U>Update Estate</U><HTML>");

        jSeparator2.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator2.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("<HTML><U>Delete Estate</U><HTML>");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Enter Estate_Id:");

        updateEstaeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEstaeIdActionPerformed(evt);
            }
        });

        proceedUpdate.setText("Next");
        proceedUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedUpdateActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Enter Estate_Id:");

        deleteEstateID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEstateIDActionPerformed(evt);
            }
        });

        proceedDelete.setText("Delete");
        proceedDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(proceedUpdate)
                .addGap(363, 363, 363))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(409, 409, 409)
                        .addComponent(newEstate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateEstaeId, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(522, 522, 522)
                            .addComponent(proceedDelete))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(198, 198, 198)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(deleteEstateID, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newEstate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateEstaeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(proceedUpdate)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(deleteEstateID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(proceedDelete)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateEstaeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEstaeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateEstaeIdActionPerformed

    private void proceedUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedUpdateActionPerformed
        if(updateEstaeId.getText().isBlank() || updateEstaeId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "EstateId can't be empty!",
               "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int text_size = 30;
        
        JTextField appartmentNo = new JTextField(text_size);
        JTextField streetName = new JTextField(text_size);
        JTextField city = new JTextField(text_size);
        JTextField state = new JTextField(text_size);
        JTextField country = new JTextField(text_size);
        JTextField pincode = new JTextField(text_size);
        JTextField fieldSize = new JTextField(text_size);
        JTextField bedrooms = new JTextField(text_size);
        JTextField bathrooms = new JTextField(text_size);
        JTextField status = new JTextField(text_size);
        JTextField price = new JTextField(text_size);
        

        JPanel estaePannel = new JPanel(new GridLayout(0,1));
        
        estaePannel.add(new JLabel("appartmentNo:"));
        estaePannel.add(appartmentNo);
        
        estaePannel.add(new JLabel("streetName:"));
        estaePannel.add(streetName);
        
        estaePannel.add(new JLabel("city:"));
        estaePannel.add(city);
        
        estaePannel.add(new JLabel("state:"));
        estaePannel.add(state);
        
        estaePannel.add(new JLabel("country:"));
        estaePannel.add(country);
        
        estaePannel.add(new JLabel("pincode:"));
        estaePannel.add(pincode);
        
        estaePannel.add(new JLabel("fieldSize:"));
        estaePannel.add(fieldSize);

        estaePannel.add(new JLabel("bedrooms:"));
        estaePannel.add(bedrooms);
        
        estaePannel.add(new JLabel("bathrooms:"));
        estaePannel.add(bathrooms);
        
        estaePannel.add(new JLabel("status:"));
        estaePannel.add(status);
        
        estaePannel.add(new JLabel("price:"));
        estaePannel.add(price);

        
      int result = JOptionPane.showConfirmDialog(null, estaePannel, 
               "Please Enter New Updated Estate details", JOptionPane.OK_CANCEL_OPTION);
      if (result == JOptionPane.OK_OPTION) {
         if(!(
                 appartmentNo.getText().isBlank()  || appartmentNo.getText().isEmpty() || 
                 streetName.getText().isBlank()  || streetName.getText().isEmpty() || 
                 city.getText().isBlank()  || city.getText().isEmpty() || 
                 state.getText().isBlank()  || state.getText().isEmpty() || 
                 country.getText().isBlank()  || country.getText().isEmpty() || 
                 pincode.getText().isBlank()  || pincode.getText().isEmpty() || 
                 fieldSize.getText().isBlank()  || fieldSize.getText().isEmpty() || 
                 bedrooms.getText().isBlank()  || bedrooms.getText().isEmpty() || 
                 bathrooms.getText().isBlank()  || bathrooms.getText().isEmpty() || 
                 status.getText().isBlank()  || status.getText().isEmpty() || 
                 price.getText().isBlank()  || price.getText().isEmpty()
                 )) {
                    
                updateEstate(
                 updateEstaeId.getText(),
                 appartmentNo.getText(),
                 streetName.getText(), city.getText(),
                 state.getText(), country.getText(),
                 Integer.parseInt(pincode.getText()) , fieldSize.getText(),
                 Integer.parseInt(bedrooms.getText()) , Integer.parseInt(bathrooms.getText()),
                 status.getText(), Long.parseLong(price.getText())
                 );
                    
            }
            
            else {
                
                JOptionPane.showMessageDialog(this, "All attributes are mandatory!",
               "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
                
            }
           
         }
    }//GEN-LAST:event_proceedUpdateActionPerformed

    private void deleteEstateIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEstateIDActionPerformed
        
    }//GEN-LAST:event_deleteEstateIDActionPerformed

    private void proceedDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedDeleteActionPerformed
        if(deleteEstateID.getText().isBlank() || deleteEstateID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "EstateId can't be empty!",
               "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
            return;
        }
        deleteEstae(deleteEstateID.getText());
    }//GEN-LAST:event_proceedDeleteActionPerformed

    private void newEstateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEstateActionPerformed
        
        // creating dialog box for taking input of estae attributes
        
        int text_size = 30;
        
        JTextField estateID = new JTextField(text_size);
        JTextField appartmentNo = new JTextField(text_size);
        JTextField streetName = new JTextField(text_size);
        JTextField city = new JTextField(text_size);
        JTextField state = new JTextField(text_size);
        JTextField country = new JTextField(text_size);
        JTextField pincode = new JTextField(text_size);
        JTextField fieldSize = new JTextField(text_size);
        JTextField bedrooms = new JTextField(text_size);
        JTextField bathrooms = new JTextField(text_size);
        JTextField status = new JTextField(text_size);
        JTextField price = new JTextField(text_size);
        

        JPanel estaePannel = new JPanel(new GridLayout(0,1));
        estaePannel.add(new JLabel("estateID:"));
        estaePannel.add(estateID);
        
        estaePannel.add(new JLabel("appartmentNo:"));
        estaePannel.add(appartmentNo);
        
        estaePannel.add(new JLabel("streetName:"));
        estaePannel.add(streetName);
        
        estaePannel.add(new JLabel("city:"));
        estaePannel.add(city);
        
        estaePannel.add(new JLabel("state:"));
        estaePannel.add(state);
        
        estaePannel.add(new JLabel("country:"));
        estaePannel.add(country);
        
        estaePannel.add(new JLabel("pincode:"));
        estaePannel.add(pincode);
        
        estaePannel.add(new JLabel("fieldSize:"));
        estaePannel.add(fieldSize);

        estaePannel.add(new JLabel("bedrooms:"));
        estaePannel.add(bedrooms);
        
        estaePannel.add(new JLabel("bathrooms:"));
        estaePannel.add(bathrooms);
        
        estaePannel.add(new JLabel("status:"));
        estaePannel.add(status);
        
        estaePannel.add(new JLabel("price:"));
        estaePannel.add(price);

        
      int result = JOptionPane.showConfirmDialog(null, estaePannel, 
               "Please Enter Estate details", JOptionPane.OK_CANCEL_OPTION);
      if (result == JOptionPane.OK_OPTION) {
         if(!(
                 estateID.getText().isBlank()  || estateID.getText().isEmpty() || 
                 appartmentNo.getText().isBlank()  || appartmentNo.getText().isEmpty() || 
                 streetName.getText().isBlank()  || streetName.getText().isEmpty() || 
                 city.getText().isBlank()  || city.getText().isEmpty() || 
                 state.getText().isBlank()  || state.getText().isEmpty() || 
                 country.getText().isBlank()  || country.getText().isEmpty() || 
                 pincode.getText().isBlank()  || pincode.getText().isEmpty() || 
                 fieldSize.getText().isBlank()  || fieldSize.getText().isEmpty() || 
                 bedrooms.getText().isBlank()  || bedrooms.getText().isEmpty() || 
                 bathrooms.getText().isBlank()  || bathrooms.getText().isEmpty() || 
                 status.getText().isBlank()  || status.getText().isEmpty() || 
                 price.getText().isBlank()  || price.getText().isEmpty()
                 )) {
             
            JTextField ownerID = new JTextField(text_size);
            JTextField ownerName = new JTextField(text_size);
            JTextField ownerContactNo = new JTextField(text_size);
            
            JPanel ownerPannel = new JPanel(new GridLayout(0,1));
            ownerPannel.add(new JLabel("ownerId:"));
            ownerPannel.add(ownerID);
        
            ownerPannel.add(new JLabel("Owner name:"));
            ownerPannel.add(ownerName);
        
            ownerPannel.add(new JLabel("owner Contact No:"));
            ownerPannel.add(ownerContactNo);
             
            int owner_result = JOptionPane.showConfirmDialog(null, ownerPannel, 
               "Please Enter Owner details", JOptionPane.OK_CANCEL_OPTION);
            
            if(owner_result == JOptionPane.OK_OPTION) {
                
                if(!( ownerID.getText().isBlank()  || ownerID.getText().isEmpty() || 
                 ownerName.getText().isBlank()  || ownerName.getText().isEmpty() || 
                 ownerContactNo.getText().isBlank()  || ownerContactNo.getText().isEmpty())) {
                    
                    if(addEstate(
                     estateID.getText(), appartmentNo.getText(),
                     streetName.getText(), city.getText(),
                     state.getText(), country.getText(),
                     Integer.parseInt(pincode.getText()) , fieldSize.getText(),
                     Integer.parseInt(bedrooms.getText()) , Integer.parseInt(bathrooms.getText()),
                     status.getText(), Long.parseLong(price.getText())
                     )) {
                        if(addOwner(ownerID.getText(), ownerName.getText(), ownerContactNo.getText(), estateID.getText())) {
                            JOptionPane.showMessageDialog(this, "Estae added successfully");
                        }
                    }
                    
                }
                
            }
            
            else {
                
                JOptionPane.showMessageDialog(this, "All attributes are mandatory!",
               "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
                
            }
           
         }
         else {
             
             JOptionPane.showMessageDialog(this, "All attributes are mandatory!",
               "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
             
         }
      }
        
    }//GEN-LAST:event_newEstateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditEstate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditEstate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditEstate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditEstate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditEstate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deleteEstateID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton newEstate;
    private javax.swing.JButton proceedDelete;
    private javax.swing.JButton proceedUpdate;
    private javax.swing.JTextField updateEstaeId;
    // End of variables declaration//GEN-END:variables

    private boolean addEstate(String estateId, String appartmentNo, String streetName,
            String city, String state, String country, int pincode, String fieldSize,
            int bedrooms, int bathrooms, String status, long price) {
        
       String insert_query = "Insert into estate values(?,?,?,?,?,?,?,?,?,?,?,?)";
        
        try {
            
            PreparedStatement stmt = Database.connection.prepareStatement(insert_query);
            
            stmt.setString(1, estateId);    stmt.setString(2, appartmentNo);    stmt.setString(3, streetName);
            stmt.setString(4, city);    stmt.setString(5, state);    stmt.setString(6, country);
            stmt.setInt(7, pincode);    stmt.setString(8, fieldSize);    stmt.setInt(9, bedrooms);
            stmt.setInt(10, bathrooms);    stmt.setString(11, status);    stmt.setLong(12, price);
            
            System.out.println("row affected: " + stmt.executeUpdate());
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
            return false;
        }
       
        return true;
    }

    private boolean addOwner(String ownerID, String ownerName, String ownerContactNo, String estateId) {
        String insert_query_owner = "Insert into Owner values(?,?,?)";
        String insert_query_owned_by = "Insert into Owned_By values(?,?)";
        
        try {
            
            PreparedStatement stmt = Database.connection.prepareStatement(insert_query_owner);
            
            stmt.setString(1, ownerID);    stmt.setString(2, ownerName);    stmt.setString(3, ownerContactNo);
            
            System.out.println("row affected: " + stmt.executeUpdate());
            
            PreparedStatement stmt_1 = Database.connection.prepareStatement(insert_query_owned_by);
            
            stmt_1.setString(1, estateId);    stmt_1.setString(2, ownerID);
            
            System.out.println("row affected: " + stmt_1.executeUpdate());
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
            return false;
        }
       
        return true;
    }

    private void updateEstate(String estateId, String appartmentNo, String streetName,
            String city, String state, String country, int pincode, String fieldSize,
            int bedrooms, int bathrooms, String status, long price) {
        String update_query = "Update estate set Apartment_No = ? , Street_Name = ?, City = ?,"
                + "State = ?, Country = ?, Pincode = ?, Field_Size = ?, Number_Of_Bedrooms = ?,"
                + "Number_Of_Bathrooms = ? , Status = ?, Price = ? where Estate_Id = ?";
        int rowsAffected = 0;
        try {
            
            PreparedStatement stmt = Database.connection.prepareStatement(update_query);
            
            stmt.setString(1, appartmentNo);    stmt.setString(2, streetName);
            stmt.setString(3, city);    stmt.setString(4, state);    stmt.setString(5, country);
            stmt.setInt(6, pincode);    stmt.setString(7, fieldSize);    stmt.setInt(8, bedrooms);
            stmt.setInt(9, bathrooms);    stmt.setString(10, status);    stmt.setLong(11, price);
            stmt.setString(12, estateId);    
            rowsAffected = stmt.executeUpdate();
            System.out.println("row affected: " + rowsAffected);
            JOptionPane.showMessageDialog(this, "rows: affected: " + rowsAffected , "succesfull", JOptionPane.OK_OPTION);
            updateEstaeId.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
        }
        
       
    }

    private void deleteEstae(String estateId) {
        
        //getting customer_id
        String get_owner_id_query = "select Owner_Id from owned_by where Estate_Id = ?";
        ResultSet rs;
        PreparedStatement stmt;
        String ownerId = "";
        try {
            stmt = Database.connection.prepareStatement(get_owner_id_query);
            stmt.setString(1, estateId);    
            rs = stmt.executeQuery();
            if(rs.next()) {
                ownerId = rs.getString(1);
            }
            else {
                JOptionPane.showMessageDialog(this, "Icorrect Estate_Id", "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println("cant fetch owner associated with estae");
            return;
        }
        
        
        
        String delete__estate_query = "Delete from estate where Estate_Id = ?";
        String delete__owned_by_query = "Delete from owned_by where Estate_Id = ?";
        String delete__owner_query = "Delete from owner where Owner_Id = ?";
        int rowsAffected = 0;
        try {
            
            stmt = Database.connection.prepareStatement(delete__owned_by_query);
            stmt.setString(1, estateId);    
            rowsAffected = stmt.executeUpdate();
            stmt = Database.connection.prepareStatement(delete__estate_query);
            stmt.setString(1, estateId);    
            stmt.executeUpdate();
            stmt = Database.connection.prepareStatement(delete__owner_query);
            stmt.setString(1, ownerId);    
            stmt.executeUpdate();
            
            
            System.out.println("row affected: " + rowsAffected);
            JOptionPane.showMessageDialog(this, "rows: affected: " + rowsAffected , "succesfull", JOptionPane.OK_OPTION);
            updateEstaeId.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Unsuccesfull", JOptionPane.ERROR_MESSAGE);
        }
    }
}
